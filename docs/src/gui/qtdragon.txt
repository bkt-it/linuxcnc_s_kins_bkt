[[cha:qtdragon-gui]]

= SilverDragon GUI

== Introduction
SilverDragon is built with the QTVCP framework.
Much of it is based on the excellent work of others in the LinuxCNC community.
[NOTE]
SilverDragon and QtVcp are new programs added into linuxcnc.
Bugs and oddities are possible. Please test carefully when using a 
dangerous machine. Please forward reports to the forum or maillist.

.qtdragon - 3 or 4 Axis Sample
image::images/silverdragon.png["QTDragon Router",align="left"]

== Getting Started

If your configuration is not currently set up to use SilverDragon, 
you can change it by editing the INI file. +
In the section '[DISPLAY]' change the 'DISPLAY' line to read: +
<<sec:display-section,Display Section>>
[source,{ini}]
----
[DISPLAY]
DISPLAY = qtvcp qtdragon
----

For the basicprobe routines to work the SUBROUTINE_PATH must be set properly. +
(Your path may be different then this sample) +
<<sec:rs274ngc-section,RS274ngc Section>>
[source,{ini}]
----
[RS274NGC]
SUBROUTINE_PATH = ../../../../nc_files/probe/basic_probe/macros
----

SilverDragon has custom INI entries: +
[source,{ini}]
----
[TOOLSENSOR]
MAXPROBE = 40
SEARCH_VEL = 200
PROBE_VEL = 50
TOUCH = 29.7

[LASER]
X = 106.9
Y = -16.85
----

The sample configuration
'sim/qtvcp_screens/qtdragon_xyza.ini' is already configured to use SilverDragon as its front-end.

== Key Bindings
SilverDragon is not intended to primarily use a keyboard for machine control. +
There are several key presses that will control the machine for convenience. +
----
F1 - Estop on/off
F2 - Machine on/off
F12 - Style Editor
Home - Home All Joint of the Machine
Escape - Abort Movement
Pause -Pause Machine Movement
----

== Buttons

Buttons that are checkable will change their text colour when checked.
Any buttons that have an indicator option have the indicators connected to a HAL signal.

== HAL files

The HAL files supplied are for simulation only. A real machine needs its own custom HAL files. The qtdragon screen
works with 3 or 4 axes with one joint per axis or 3 or 4 axes in a gantry configuration. (2 joints on 1 axis)

== Manual Tool Changes
If your machine requires manual tool changes, SilverDragon can pop a message box to direct you. +
You must connect the proper HAL pin in the post_gui file.
For example:
[source,{hal}]
----
net tool-change      hal_manualtoolchange.change   <=  iocontrol.0.tool-change 
net tool-changed     hal_manualtoolchange.changed  <=  iocontrol.0.tool-changed
net tool-prep-number hal_manualtoolchange.number   <=  iocontrol.0.tool-prep-number
----

== Spindle

The screen is intended to interface to a VFD, but will still work without it. There are a number of VFD drivers included 
in the linuxcnc distribution. It is up to the end user to supply the appropriate driver and HAL file connections according
to his own machine setup.

== Probing

The probe screen has been through basic testing but there could still be some minor bugs.
When running probing routines, use extreme caution until you are familiar
with how everything works. Probe routines run without blocking the main GUI. This gives the operator the opportunity 
to watch the DROs and stop the routine at any time.

[NOTE]
Probing is very unforgiving to mistakes; be sure to check settings before using.

== Run from Line

A gcode program can be started at any line by clicking on the desired line in the gcode display while in AUTO mode. It
is the operator's responsibility to ensure the machine is in the desired operational mode. The start line is indicated 
in the box labelled LINE, next to the CYCLE START button. The run from line feature can be disabled in the settings page.

[NOTE]
Linuxcnc's run-from-line is not very user friendly. eg. It does not start the spindle or confirm the proper tool.
It does not handle subroutines well. If used it is best to start on a rapid move.

== Laser buttons

The LASER ON/OFF button in intended to turn an output on or off which is connected to a small laser crosshair projector.
When the crosshair is positioned over a desired reference point on the workpiece, the REF LASER button can be pushed which then sets
the X and Y offsets to the values indicated by the LASER OFFSET fields in the Settings page and the INI file.

== Styles

Nearly all aspects of the GUI appearance are configurable via the qtdragon.qss stylesheet file. The file can be edited manually or 
through the stylesheet dialog widget in the GUI. To call up the dialog, press F12 on the main window. New styles can be applied
temporarily and then saved to a new qss file, or overwrite the current qss file.

== Screen resolution

This GUI was initially developed for a screen with 1440 x 900 resolution. It is not resizable. It will work in window mode on
any monitor with higher resolution but not on monitors with lower resolution.

== Customization

All aspects of the GUI are fully customizable through qtdesigner. This is included with the qtvcp development environment.
The extensive use of qtvcp widgets keeps the amount of required python code to a minimum, allowing relatively easy modifications.
The LinuxCNC website has extensive documentation on the installation and use of qtvcp libraries.
<<cha:qtvcp,QtVCP Overview>> for more information


= 词汇表

术语列表及其含义。
对于用户，安装人员和开发人员，某些术语具有一般含义，还具有其他一些含义。

Acme螺丝::
    (((Acme螺丝))) 一种使用Acme螺纹形式的导螺杆。
    Acme螺纹的摩擦和磨损比简单的三角形螺纹要低一些，但是滚珠丝杠的摩擦和磨损却更低。
    大多数手动机床使用顶针丝杠。

轴::
     (((轴))) 计算机控制机器的可移动部件之一。
    对于典型的立式铣床，工作台为X轴，鞍座为Y轴，主轴或拐点为Z轴。
    像转台一样的角轴称为A，B和C。相对于工具的其他线性轴分别称为U，V和W。

Axis(GUI)::
     (((GUI))) LinuxCNC用户可用的用户图形界面之一。
    它具有菜单和鼠标按钮的现代用法，同时可以自动隐藏一些传统的LinuxCNC控件。
    它是唯一打开文件后即显示整个工具路径的开源界面。

Gmoccapy (GUI)::
     (((GUI))) LinuxCNC用户可用的用户图形界面。
    它具有工业控制的使用和感觉，可与触摸屏，鼠标和键盘一起使用。
    它支持嵌入式选项卡和暂停驱动的用户消息，它提供了许多可用硬件控制的暂停。
    Gmoccapy具有高度可定制性。


反冲::
     (((反冲))) 导螺杆中方向相反时发生的运动或空转。或其他机械运动驱动系统。
    这可能是由于丝杠上的螺母松动，皮带打滑，电缆松弛，旋转联轴器的“缠绕”以及机械系统不牢固的其他地方引起的。
    间隙会导致运动不准确，或者由于外力引起运动（例如，将切削工具拉到工件上），从而导致切削工具损坏。
    之所以会发生这种情况，是因为在通过切削工具将工件拉过间隙距离时，刀具上切屑负载的突然增加。

齿隙补偿::
     (((齿隙补偿))) 任何试图减少反冲效果而没有从机械系统中实际消除反冲效果的技术。
    这通常在控制器中的软件中完成。这样可以校正运动中零件的最终静止位置，
    但不能解决与运动中方向变化（想像圆弧插补）以及由外力（例如切削工具拉动工件）引起的运动有关的问题。

球形螺母::
     (((球形螺母))) 一种专用于滚珠丝杠的螺母。它包含一个内部通道，用于使滚珠从螺杆的一端再循环到另一端。

滚珠丝杠::
     (((滚珠丝杠))) 一种导螺杆，在螺母和螺钉之间使用较小的硬化钢球以减少摩擦。滚珠丝杠的摩擦力和游隙很小，但通常很昂贵。

球形螺母::
     (((球形螺母))) 一种专用于滚珠丝杠的螺母。它包含一个内部通道，用于使滚珠从螺杆的一端再循环到另一端。

CNC::
     (((CNC))) 计算机数控。
    用于指机械的计算机控制的通用术语。
    CNC无需人工操作曲柄来移动切削刀具，
    而是根据零件程序使用计算机和电机来移动刀具。

Comp::
     (((Comp))) 用于构建，编译和安装LinuxCNC HAL组件的工具。

配置(n)::
    包含一组配置文件的目录。
    定制配置通常保存在用户home/linuxcnc/configs目录中。
    这些文件包括LinuxCNC的传统INI文件和HAL文件。
    配置还可能包含几个描述工具，参数和NML连接的常规文件。

配置(v)::
     设置LinuxCNC使其与机床上的硬件相匹配的任务。

坐标测量机::
     (((坐标测量机))) 坐标测量机用于对零件进行许多精确的测量。
    当需要将手工制作的原型进行数字化以进行模具制造时，
    这些机器可以用于为找不到图纸的零件创建CAD数据，
    或者用于检查加工或模制零件的准确性。

显示单位::
     (((显示单位))) 屏幕显示所使用的线性和角度单位。

DRO::
     (((DRO))) 数字读出系统是一个安装在机床滑座上的位置测量设备系统，
    该系统与数字显示屏相连，该数字显示屏显示了刀具相对于某个参考位置的当前位置。
    DRO在手动机床上非常受欢迎，因为即使机床上的Acme螺杆非常松动，
    它们也可以测量真实的刀具位置而不会产生反冲。
    一些DRO使用线性正交编码器从机器中获取位置信息，而某些DRO使用类似于旋转的分解器的方法。

EDM::
     (((EDM))) EDM是一种去除坚硬或难于加工的金属或强硬金属或旋转工具无法以经济有效的方式生产所需形状的金属的方法。
    一个很好的例子是矩形冲头模具，
    需要尖锐的内角。铣削操作无法使用有限直径的刀具产生尖锐的内角。线切割机床可以制造半径仅比线半径大的内角。
    下沉式EDM可以使内角的半径仅略大于下沉电极的角上的半径。

EMC::
     (((EMC))) 增强型机器控制器。最初是一个NIST项目。2012年更名为LinuxCNC。

EMCIO::
     (((EMCIO))) LinuxCNC中处理通用I/O的模块，与轴的实际运动无关。

EMCMOT::
     (((EMCMOT))) LinuxCNC中的模块，用于处理切削工具的实际运动。它作为实时程序运行，并直接控制电动机。

编码器::
     (((编码器))) 一种测量位置的设备。通常是机械光学设备，
    可输出正交信号。信号可以通过特殊硬件进行计数，
    也可以通过与LinuxCNC的parport直接进行计数。

进给::
     (((进给))) 进行切割时所用工具的相对缓慢，受控的运动。

进给速度::
     (((进给速度))) 切割运动发生的速度。在自动或mdi模式下，使用F命令进给速度。
    F10表示每分钟十个机器单位。

反馈::
     (((反馈))) LinuxCNC通过这种方法（例如正交编码器信号）接收有关电机位置的信息

进给率超控::
     (((进给率超控))) 一种手动的，操作员控制切削过程中刀具移动速度的变化。
    通常用于允许操作员调整一些钝的工具，或其他需要调整进给速度的工具。

浮点数::
    有小数点的数字。（12.300）在HAL中被称为float。

G-Code::
     (((G-Code))) 用于指最常见零件编程语言的通用术语。G代码有几种方言，LinuxCNC使用RS274/NGC。

GUI::
    (((GUI))) 用户图形界面。.
    通用;;
         一种界面类型，允许通过操作计算机屏幕上的图标和其他元素（窗口小部件）在计算机和人之间（在大多数情况下）进行通信。
    
    LinuxCNC;;
         一个向机器操作员显示图形屏幕的应用程序，允许操纵机器和相应的控制程序。

HAL::
     (((HAL))) 硬件抽象层。在最高级别上，
    它只是一种允许加载和互连许多构件以组装复杂系统的方法。
    许多构件都是硬件设备的驱动程序。
    但是，HAL不仅可以配置硬件驱动程序，还可以做更多的事情。

回复原位::
     (((回复原位))) 机器工作环境中的特定位置，用于确保计算机和实际机器在工具位置上一致。

ini文件::
     (((INI))) 一个文本文件，其中包含为特定计算机配置LinuxCNC的大多数信息。

实例::
     (((Instance))) 一个人可以有一个类的实例或一个特定的对象。
    该实例是在运行时创建的实际对象。
    用程序员的术语来说，Lassie对象是Dog类的一个实例。

关节坐标::
     (((关节坐标))) 这些参数指定了机器各个关节之间的角度。另请参阅运动学

慢走::
     (((慢走))) 手动移动机器的轴。
    点动时，每次按下键都会使轴移动固定量，或者只要按住键，轴就以恒定的速度移动。
    在手动模式下，可以从图形界面设置点动速度。

内核空间::
     请参阅 *实时*。.

运动学::
     (((运动学))) 机器的世界坐标和关节坐标之间的位置关系。运动学有两种类型。
    正向运动学用于根据关节坐标计算世界坐标。
    反向运动学用于完全相反的目的。
    注意，运动学没有考虑到机器上的力、力矩等。
    仅用于定位。

导螺杆::
     (((导螺杆))) 由马达旋转以移动工作台或机器其他部分的螺杆。
    导螺杆通常是滚珠丝杠或acme螺杆，
    但在精度和长寿命不如低成本重要的地方，可以使用常规的三角螺纹螺杆。

机器单位::
     (((机器单位))) 用于机器配置的线性和角度单位。
    这些单位是在ini文件中指定和使用的。
    HAL引脚和参数通常也以机器单位为准。

MDI::
     (((MDI))) 手动数据输入。这是一种操作模式，其中控制器执行由操作员键入的G代码单行。

NIST::
     (((NIST))) 美国国家标准技术研究所。美国商务部的代理商。

NML::
     (((NML))) 中间消息语言提供了一种机制，用于在同一缓冲区中处理多种类型的消息，
     以及简化用于以中间格式对缓冲区进行编码和解码的接口以及配置机制。

偏移量::
     (((偏移量)))
    任意值，添加到某物的值上以使其等于某些所需值。
    例如，gcode程序通常是围绕某个方便的点编写的，例如X0，Y0。
    夹具偏移量可用于移动该gcode程序的实际执行点，以正确适合虎钳和钳口的真实位置。
    刀具补偿可用于将刀具的“未校正”长度偏移为等于该刀具的实际长度。

零件程序::
     (((零件程序))) 用控制器可以理解的语言来描述零件。
     对于LinuxCNC，该语言是RS-274/NGC，通常称为G代码。

程序单位::
    (((程序单位))) 零件程序中使用的线性和角度单位。
    线性程序单元不必与线性机器单元相同。
    有关更多信息，请参见G20和G21。
    角度程序单位始终以度为单位。

Python::
     通用的高级的编程语言。
     在LinuxCNC中用于Axis GUI，
     Stepconf配置工具和一些G代码编程脚本。

快速::
     (((快速))) 快速，可能导致不太精确的工具运动，
    通常在两次切削之间移动。
    如果刀具在快速过程中碰到工件或夹具，则可能是一件坏事！

快速速率::
     (((快速速率)))快速运动发生的速度。在自动或mdi模式下，快速速率通常是机器的最大速度。
    首次测试g代码程序时，通常希望限制快速速率。

实时::
    (((实时))) 旨在满足非常严格的时间期限的软件。
    在Linux下，为了满足这些要求，必须安装实时内核（如RTAI）并构建可在特殊实时环境中运行的软件。
    因此，实时软件在内核空间中运行。

RTAI::
     (((RTAI))) 实时应用程序接口，请参阅
    https://www.rtai.org/[https://www.rtai.org/]，
    LinuxCNC可以使用Linux的实时扩展来实现实时性能。

RTLINUX::
    (((RTLINUX))) 请参阅
    https://en.wikipedia.org/wiki/RTLinux[https://en.wikipedia.org/wiki/RTLinux],
    这是LinuxCNC用来实现实时性能的较旧的Linux实时扩展。已过时，已由RTAI取代。

RTAPI::
     (((RTAPI))) 可移植的实时操作系统接口，包括带有实时扩展的RTAI和POSIX pthread。

RS-274/NGC::
     (((RS274NGC))) LinuxCNC零件程序使用的语言的正式名称。

伺服马达::
     (((伺服马达))) 通常，指代任何带有误差感应反馈以校正执行器位置的电动机。
    另外，还专门设计了一种电动机，可在此类应用中提供更高的性能。

伺服回路::
     (((回路))) 控制回路，用于控制配备反馈装置的电动机的位置或速度。

符号整数::
     (((符号整数))) 可以带有正号或负号的整数。
    在HAL中，它称为s32。（带符号的32位整数的可用范围为-2,147,483,647至+2,147,483,647。）

主轴::
     (((主轴))) 旋转进行切割的机床零件。在铣刀或钻头上，主轴固定切削刀具。在车床上，主轴固定工件。

主轴转速超控::
     切割时刀具旋转速度的手动的，操作员控制速率。
    常用于允许操作者进行调整刀齿引起的颤动。
    主轴转速超控假定已将LinuxCNC软件配置为控制主轴速度。

Stepconf::
     LinuxCNC配置向导。它能够处理许多基于步进和方向运动命令的机器。
     在用户回答了有关要运行LinuxCNC的计算机和机器的几个问题之后，它将编写完整的配置。

步进电机::
     (((步进电机))) 一种以固定步长旋转的电动机。通过计算步数，可以确定电机旋转了多远。
    如果负载超过电动机的扭矩能力，它将跳过一个或多个步骤，从而导致位置错误。

任务::
     (((任务))) LinuxCNC中的模块，用于协调整体执行并解释零件程序。

Tcl/Tk::
     (((Tk))) 一种脚本语言和图形小部件工具包，使用它编写了几个LinuxCNC GUI和选择向导。

横移::
     (((横移))) 从起点到终点的直线移动。

单位::
    (((单位))) 请参见“机器单位”，“显示单位”或“程序单位”。

无符号整数::
     (((无符号整数))) 没有符号的整数。在HAL中，它称为u32。（无符号的32位整数的可用范围为0到4,294,967,296。）

世界坐标::
     (((世界坐标))) 这是绝对的参考框架。它给出了固定参考系的坐标，该参考系附着在机床的某个点（通常是基座）上。